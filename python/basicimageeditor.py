# -*- coding: utf-8 -*-
"""basicImageEditor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s2qa1a7H4eg4P_TJLwPij0xduRhLjyuh
"""

import cv2 # library for working with images
from google.colab.patches import cv2_imshow # for image display
import numpy as np
from urllib.request import urlopen

'''
Read an image from a url and return an image object
'''
def url_to_image(url, readFlag=cv2.IMREAD_COLOR):
    resp = urlopen(url)
    image = np.asarray(bytearray(resp.read()), dtype="uint8")
    image = cv2.imdecode(image, readFlag)

    # return the image
    return image



'''
Read an image and process its pixels per the supplied pixelProcessor

pixelProcessor is a function that accepts three params: blue, green, red
and returns the processed values of blue, green, red
'''
def processImage(imagePath, pixelProcessor):

  # open the image
  #image = cv2.imread(imagePath)
  image = url_to_image(imagePath)

  # get the size information
  height, width, channels = image.shape

  # loop through all the pixels and change them
  for x in range(width):
    for y in range(height):

      # get the pixel colors
      blue, green, red = image[y, x]

      # use the pixelProcessor to change the color
      # pixelProcessor is a function allowing us to pass
      # in any processor we have created
      image[y, x] = pixelProcessor(blue, green, red)

  return image



def popRed(b, g, r):

  # if a pixel's red value is less than
  # the sum of its blue and green, make
  # if grayscale, otherwise, make no change
  #If red is less than green + blue.
  if r<b+g:
    #Average them and return.
    average = (int(r) + int(g) + int(b)) // 3
    return (average, average, average)
  #Else change nothing.
  else:
    return(b,g,r)


def roseProcessor(b, g, r):

  #increase the value of the red color
  #If red is less than green + blue make green and blue half of red and multiply red by 2.
  if r<g+b:
    g=r/2
    b=r/2
    r=r*2
  #If all colors are equal than set red to 255
  elif r==g and g==b:
    r=255
  return (b,g,r)


otterbeinImagePath ="https://campustour.otterbein.edu/sites/default/files/media/assets/campus/Otterbein_57.JPG"
image = url_to_image(otterbeinImagePath)
cv2_imshow(image)
image = processImage(otterbeinImagePath, roseProcessor)
cv2_imshow(image)


rosesImagePath="https://h2.commercev3.net/cdn.springhillnursery.com/images/800/74247A.jpg"
image = url_to_image(rosesImagePath)
cv2_imshow(image)
image = processImage(rosesImagePath, popRed)
cv2_imshow(image)