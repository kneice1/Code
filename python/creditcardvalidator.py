# -*- coding: utf-8 -*-
"""creditCardValidator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_UAidm6WQviH3qmnmiPTpUZ4-X31qWkp

# Lab 8

You are given a CSV file with sales data.  Upload the file to google drive, then...

1. There are some records with invalid credit card numbers.  Read the file and put all the good records in one new file and all the bad records in a different file.
2. For the file with good transactions, compute the total number of sales, the total sales, and average sales amount.
3. Compute the same for the bad file.
4. Your output should be:

```
Good sales: 3992 Transactions totaling $404702.36 with an average transaction of 101.38
Bad sales: 8 Transactions totaling $595.89 with an average transaction of 74.49
```

### Hints
1. You can use the credit card validation function you created in lab 3 or use the one I provided in this lab.  
2. Review notebook from Chapter 5.  It has everything you will need.
"""

from google.colab import drive
drive.mount('/content/drive')

def ccValidator(cc):
  checkSum = 0

  for i in range(0, len(cc)-1):
    digit = int(cc[i])

    if (len(cc) - i) % 2 == 0:
      digit *= 2
      checkSum += int(digit / 10)
      checkSum += digit % 10
    else:
      checkSum += digit

  return (checkSum + int(cc[-1])) % 10 == 0

from os import read

# Don't forget to mount your google drive!

import csv

def cleanSalesFile(originalPath, cleanFilePath, badFilePath):
  # index of the cc number in the CSV file
  ccIndex = 0
  
  with open(originalPath, "r") as originalFile:
    with open(badFilePath, "w") as badFile:
      with open(cleanFilePath, "w") as cleanFile:
      
        #Make csv reader and get the titles
        csvReader = csv.reader(originalFile)
        titles = next(csvReader)
        row=0
        #Move titles into the new files.
        while row<len(titles):
          #If it is the last string in the title list, add a new line to the end.
          if(row==len(titles)-1):
            badFile.write(titles[row]+"\n")
            cleanFile.write(titles[row]+"\n")
            row+=1
          #Add the title and then add an ",".
          else:
            badFile.write(titles[row]+",")
            cleanFile.write(titles[row]+",")
            row+=1
            
        ccIndex=1
        #Move over each line into the new files.
        for line in originalFile:
          # Split each line.
            cc=line.split(",")
            # Remove the quotation marks.
            credit=cc[0][1:-1]
            # If number is a valid cc then put line into cleanFile.
            if ccValidator(credit)==True:
              cleanFile.write(line)
              ccIndex+=1
            # Else put line into badFile
            else:
              badFile.write(line)
              ccIndex+=1
              
          
          
        #
        # don't forget to pull the titles if your file has a title row
        # if we don't do this, the first line read will be the titles
        # YOUR CODE

        # add title row to output files
        # YOUR CODE

        # read each line, if the cc is valid, write to clean file otherwise bad file
        # YOUR CODE


def computeSalesStats(filePath):

  # Index of the charge amount in the CSV file
  chargeIndex = 2
  totalSales = 0.0
  salesCount = 0
  # open file.
  with open(filePath, "r") as file:
    csvReader = csv.reader(file)
    # Read in titles
    titles= next(csvReader)
    transaction=0
    #Find the row with "charge."
    while transaction<len(titles) and titles[transaction]!="charge":
      transaction+=1
    #Read in the charge column. 
    for line in file:
      #Find number of sales.
      salesCount+=1
      cc=line.split(",")
      #Turn charges into a float, then add them.
      credit=float(cc[transaction][1:-2])
      totalSales+=credit

  return salesCount, totalSales


# file locations (BE SURE TO CHANGE TO YOUR DRIVE IF DIFFERENT)
ccFilePath = "/content/drive/MyDrive/Colab Notebooks/sales.csv"
ccCleanPath = "/content/drive/MyDrive/Colab Notebooks/cleansales.csv"
ccBadPath = "/content/drive/MyDrive/Colab Notebooks/badsales.csv"

# create the clean and bad data files
cleanSalesFile(ccFilePath, ccCleanPath, ccBadPath)

# process the sales
cnt, tot = computeSalesStats(ccCleanPath)
print("Good sales: {0} Transactions totaling ${1:2.2f} with an average transaction of {2:2.2f}".format(cnt, tot, tot/cnt))

# process the invalid transactions
cnt, tot = computeSalesStats(ccBadPath)
print("Bad sales: {0} Transactions totaling ${1:2.2f} with an average transaction of {2:2.2f}".format(cnt, tot, tot/cnt))